load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "api",
    srcs = [
        "api.go",
        "codec.go",
        "json_codec.go",
    ],
    importpath = "github.com/prometheus/prometheus/web/api/v1",
    visibility = ["//visibility:public"],
    deps = [
        "//config",
        "//model/exemplar",
        "//model/labels",
        "//model/metadata",
        "//model/timestamp",
        "//promql",
        "//promql/parser",
        "//rules",
        "//scrape",
        "//storage",
        "//storage/remote",
        "//tsdb",
        "//tsdb/index",
        "//util/annotations",
        "//util/httputil",
<<<<<<< HEAD
=======
        "//util/jsonutil",
>>>>>>> 0d91055fe (Release v2.44.0)
        "//util/stats",
        "@com_github_go_kit_log//:log",
        "@com_github_go_kit_log//level",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_json_iterator_go//:go",
        "@com_github_munnerz_goautoneg//:goautoneg",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_common//model",
        "@com_github_prometheus_common//route",
<<<<<<< HEAD
=======
        "@org_golang_x_exp//slices",
>>>>>>> 0d91055fe (Release v2.44.0)
    ],
)

alias(
    name = "go_default_library",
    actual = ":api",
    visibility = ["//visibility:public"],
)

go_test(
    name = "api_test",
    srcs = [
        "api_test.go",
        "codec_test.go",
        "errors_test.go",
        "json_codec_test.go",
    ],
    embed = [":api"],
    deps = [
        "//config",
        "//model/exemplar",
<<<<<<< HEAD
=======
        "//model/histogram",
>>>>>>> 0d91055fe (Release v2.44.0)
        "//model/labels",
        "//model/metadata",
        "//model/timestamp",
        "//prompb",
        "//promql",
        "//promql/parser",
        "//rules",
        "//scrape",
        "//storage",
        "//storage/remote",
        "//tsdb",
        "//util/annotations",
        "//util/stats",
        "//util/teststorage",
        "@com_github_go_kit_log//:log",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_munnerz_goautoneg//:goautoneg",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_common//config",
        "@com_github_prometheus_common//model",
        "@com_github_prometheus_common//promlog",
        "@com_github_prometheus_common//route",
        "@com_github_stretchr_testify//require",
    ],
)
